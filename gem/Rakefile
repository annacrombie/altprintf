require 'rake/extensiontask'
require 'securerandom'
require 'fileutils'

require 'bundler/gem_tasks' if ENV['GEM_BUILD']

SRC_DIR = File.join(__dir__, '../src')

Rake::ExtensionTask.new('altprintf') do |ext|
  ext.lib_dir = 'lib/altprintf'
  ext.config_script =
    case ENV['GEM_DEBUG']
    when nil
      'extconf_dev.rb'
    else
      'extconf_debug.rb'
    end
end

namespace :gem do
  desc 'copy necessary C files from ../src and build the resulting gem'
  task :build do
    tmp_dir = "/tmp/altprintf_#{SecureRandom.hex(8)}"
    puts "cloning to #{tmp_dir}"
    FileUtils.mkdir(tmp_dir)

    Dir[
      'readme.md',
      'altprintf.gemspec',
      'Rakefile',
      'lib/**/*',
      'ext/**/*.{c,h}',
      'ext/altprintf/extconf{_helper}.rb'
    ].each do |f|
      next if File.directory?(f)

      dir = File.join(tmp_dir, File.dirname(f))
      FileUtils.mkdir_p(dir)
      FileUtils.cp(f, File.join(dir, File.basename(f)))
    end

    FileUtils.cp_r(
      %w[altprintf fmt fmte parsef strbuf enums log syntax].map do |w|
        %w[h c].map { |e| File.join(SRC_DIR, "#{w}.#{e}") }
          .select { |f| File.exist?(f) }
      end.flatten,
      File.join(tmp_dir, 'ext/altprintf/')
    )

    FileUtils.cd(tmp_dir)

    sh "GEM_BUILD=1 rake build"

    FileUtils.cp(Dir['pkg/*'], File.join(__dir__, 'pkg'))
    FileUtils.cd(__dir__)
    FileUtils.rm_rf(tmp_dir)
  end

  desc 'pushes the latest gem'
  task :publish do
    load File.join(__dir__, 'altprintf.gemspec')
    pkg = "pkg/#{AltPrintf::SPEC.name}-#{AltPrintf::SPEC.version}.gem"

    sh "rake gem:build" unless File.exist?(pkg)
    sh "gem push #{pkg}"
  end
end
