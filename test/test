#!/usr/bin/env python3

from test import apf_test
from apf_grammar import cfg
from fuzzer import Fuzzer, str_tree, print_tree
import sys

cmd = sys.argv[1]

assert apf_test(cmd, "test", "test")
assert apf_test(cmd, "test {}", "test string", "string")
assert apf_test(cmd, "{:.3}", "1.500", 1.5)
assert apf_test(cmd, "{}", "80", 80)
assert apf_test(cmd, "{=:>#10}", "##########")
assert apf_test(cmd, "{?a:b}", "a", 1)
assert apf_test(cmd, "{?a:b}", "b", 0)
assert apf_test(cmd, "a{=b:> 9}", "a        b")
assert apf_test(cmd, "片{}", "片仮名", "仮名")
assert apf_test(cmd, "{?{={?a:b{}}}}d", "bcd", 1, 0, "c")
assert apf_test(cmd, "片{:> 5}", "片 仮名", "仮名")
assert apf_test(cmd, "{=片{:> 5}:> 8}", " 片 仮名", "仮名")

fuzzer = Fuzzer(cfg)
amnt = 3000
for x in range(amnt):
    if x % 1000 == 0:
        print("\r%3d%%, %d / %d" % (x * 100.0 / amnt, x, amnt))
    tree = fuzzer.gen(cfactor=0.8)

    if not apf_test(cmd, str_tree(tree), None, *fuzzer.args()):
        print_tree(tree)
        sys.exit(1)
